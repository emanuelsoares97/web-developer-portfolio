[
  {
    "title": "Store Management System",
    "description": "Manage products, users, and orders with authentication and admin interface. User: admin@store.com, Password: admin123",
    "technologies": "Flask, SQLAlchemy, PostgreSQL, JWT, JavaScript",
    "repo": "https://github.com/emanuelsoares97/store-management-system",
    "demo": "https://emanuelsoares97.github.io/store-management-system-frontend/login.html"
  },

  {
    "title": "PC Price Tracker",
    "description": "Tracks and analyzes PC hardware prices from Globaldata. Performs daily scraping, compares price history, and sends automatic email alerts on significant drops.",
    "technologies": "Python, Selenium, Flask, JavaScript, GitHub Actions",
    "repo": "https://github.com/emanuelsoares97/pc-price-tracker",
    "demo": "https://pc-price-tracker.onrender.com/"
},
  
  {
    "title": "Audio Transcriber",
    "description": "Web app for automatic audio transcription using advanced speech recognition models (OpenAI Whisper). Supports file upload, speaker diarization, export to JSON or PDF, and features a modern, responsive interface.",
    "technologies": "Python, Flask, OpenAI Whisper, JavaScript, Bootstrap",
    "repo": "https://github.com/emanuelsoares97/audio-transcriber"
  },

  {
    "title": "Blog-Django",
    "description": "Simple blog application built with Django. Users can register, log in, and CRUD blog posts. Includes authentication and admin panel.",
    "technologies": "Python, Django, SQLite, HTML, CSS",
    "repo": "https://github.com/emanuelsoares97/blog-django"
  },

  {
  "title": "Interview Transcriber",
  "description": "Transcribes in real time what you say into the microphone and/or what is playing on the PC. Useful for interviews, meetings, or quick subtitles. The backend uses Flask and Whisper (OpenAI) for transcription. System audio only works on localhost due to technical and cloud limitations.",
  "technologies": "Python, Flask, Socket.io, Openai-whisper, JavaScript",
  "repo": "https://github.com/emanuelsoares97/interview-transcriber" 
  },
  {
    "title": "Sales Data Analysis",
    "description": "Sales data insights using Pandas and Matplotlib.",
    "technologies": "Python, Pandas, Matplotlib, Seaborn",
    "repo": "https://github.com/emanuelsoares97/projeto-analisevendasloja"
  },
  {
    "title": "Metin2 YOLO Detector",
    "description": "Object detection for Metin2 game using YOLO and OpenCV.",
    "technologies": "Python, YOLOv5, OpenCV",
    "repo": "https://github.com/emanuelsoares97/metin2-yolo-detector"
  },
  {
    "title": "Store Simulator",
    "description": "Responsive shopping experience with cart functionality and email integration. Users can place orders or send contact requests, which are automatically sent to the store owner via email. Built with HTML, CSS, and JavaScript on the frontend, and a Flask API handling the backend email logic.",
    "technologies": "HTML, CSS, JavaScript, Flask, Python, SMTP",
    "repo": "https://github.com/emanuelsoares97/projeto-lojaonline",
    "demo": "https://emanuelsoares97.github.io/projeto-lojaonline/"
  },
  {
    "title": "Arena Kids Scoreboard",
    "description": "Interactive scoreboard for childrenâ€™s event with timer and confetti celebration.",
    "technologies": "HTML, CSS, JavaScript, Confetti.js",
    "repo": "https://github.com/emanuelsoares97/arena-kids-scoreboard",
    "demo": "https://emanuelsoares97.github.io/arena-kids-scoreboard/"
  }
]